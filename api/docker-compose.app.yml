version: '3.9'
services:
  api:
    container_name: student-rest-api
    image: student-rest-api:0.0.1
    volumes:
      - postgres-data:/app/postgres-data
    build: .
    ports:
      - '8000:3000'
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    restart: always
    depends_on:
      db:
        condition: service_healthy
    command: bash -c "npm run && npm run start:migrate:prod"
  db:
    container_name: prod-db
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST} 
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postgres-data:/var/lib/postgresql/data
volumes:
  postgres-data:
    name: postgres-data
